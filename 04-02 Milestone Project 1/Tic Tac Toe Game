#all functions
from IPython.display import clear_output
import random
from random import randint

def display_board(board):
    row1 = [board[7],board[8],board[9]]
    row2 = [board[4],board[5],board[6]]
    row3 = [board[1],board[2],board[3]]
    
    print(row1)
    print(row2)
    print(row3)
    
def choose_marker():
    valid_markers = ['X','x','O','o']
    marker = input('Which marker would you like to be? (X or O) ')
    while marker not in valid_markers:
        print('That is not a valid marker. Please choose again.')
        marker = input('Which marker would you like to be? (X or O) ')
    if marker == 'O' or marker == 'o':
        print('You have chosen O as your marker.')
        return 'O'
    elif marker == 'X' or marker == 'x':
        print('You have chosen X as your marker.')  
        return 'X'
    
def win_check(board, marker):
    if marker == 'X':
        if board[1]==board[2]==board[3]=='X' or board[4]==board[5]==board[6]=='X' or board[7]==board[8]==board[9]=='X' or board[1]==board[4]==board[7]=='X' or board[2]==board[5]==board[8]=='X' or board[3]==board[6]==board[9]=='X' or board[1]==board[5]==board[9]=='X' or board[3]==board[5]==board[7]=='X':
            return True
        else:
            return False
    elif marker == 'O':
        if board[1]==board[2]==board[3]=='O' or board[4]==board[5]==board[6]=='O' or board[7]==board[8]==board[9]=='O' or board[1]==board[4]==board[7]=='O' or board[2]==board[5]==board[8]=='O' or board[3]==board[6]==board[9]=='O' or board[1]==board[5]==board[9]=='O' or board[3]==board[5]==board[7]=='O':
            return True
        else:
            return False

def choose_first():
    coin = random.randint(0,1)
    if coin == 0:
        print("Let's flip a coin to see who goes first...")
        print('Heads! Player 1 goes first.')
        return True
    elif coin == 1:
        print("Let's flip a coin to see who goes first...")
        print('Tails! Player 2 goes first.')
        return False

def space_check(board, position):
    return board[position]==' '

def place_marker(board, marker, position):
    board[position]=marker
        
def full_board_check(board):
    return ' ' not in board

def choose_position(board):
    position = int(input('Please select the position you wish to place your marker. (1-9) '))
    while position not in range(1,10):
        position = int(input('That is not a valid position. Please select another position. (1-9) '))
    while not space_check(board, position):
        position = int(input('That position is already taken. Please select another position. (1-9) '))
    return position

def replay():
    valid_play_agains = ['Y','y','N','n']
    play_again = input('Would you like to play again? (Y or N) ')
    while play_again not in valid_play_agains:
        print('That is not a valid input. Please choose again.')
        play_again = input('Would you like to play again? (Y or N) ')
    if play_again == 'Y' or play_again == 'y':
        return True
    elif play_again == 'N' or play_again == 'n':
        print('Thanks for playing!')
    
def switch_turn():
    global Player1
    global Player2
    Player1 = not Player1
    Player2 = not Player2

#import and set up empty board, valid markers
from IPython.display import clear_output
from random import randint
number_board = ['#','1','2','3','4','5','6','7','8','9']
empty_board = ['#',' ',' ',' ',' ',' ',' ',' ',' ',' ']
game_board = ['#',' ',' ',' ',' ',' ',' ',' ',' ',' ']
valid_markers = ['X','O']
coin = None
game_on = True
Player1 = True
Player2 = False

print('Welcome to Tic Tac Toe!')
print('Shown below are the position numbers for this game.')
display_board(number_board)

#players choose_marker()
print('Player 1 will choose their marker first.')
marker1 = choose_marker()
if marker1 == 'X':
    marker2 = 'O'
else:
    marker2 = 'X'
print(f'Player 2 will be {marker2}.')

#flip coin for which player goes first choose_first()
if not choose_first():
    switch_turn()

#set boolean and while loop for game_on
while game_on:
    #player's turns
    #take turns to place_marker(), incorporate space_check() within choose_position()
    while Player1 == True:
        print("PLAYER 1'S TURN")
        marker = marker1
        print(f'This is the current board. Your marker is {marker}.')
        display_board(game_board)
        position = choose_position(game_board)
        place_marker(game_board, marker, position)
        #after every turn, win_check() for the marker that was just placed
        if win_check(game_board, marker) or full_board_check(game_board):
            Player1 = False
            break
        else:
            clear_output()
            switch_turn()
    while Player2 == True:
        print("PLAYER 2'S TURN")
        marker = marker2
        print(f'This is the current board. Your marker is {marker}.')
        display_board(game_board)
        position = choose_position(game_board)
        place_marker(game_board, marker, position)
        #after every turn, win_check() for the marker that was just placed
        if win_check(game_board, marker) or full_board_check(game_board):
            Player2 = False
            break
        else:
            clear_output()
            switch_turn()
    #if win_check() or full_board_check() == True, replay()
    if Player1 == False and Player2 == False:
        if win_check(game_board, marker):
            if marker == marker1:
                display_board(game_board)
                print('Congratulations Player 1! You won!')
            elif marker == marker2:
                display_board(game_board)
                print('Congratulations Player 2! You won!')
        #if full_board_check() == True and win_check() == False, print('Tie')
        elif full_board_check(game_board) and not win_check(game_board, marker):
            print("It's a tie.")
        #if not replay(), set boolean to True, else break
        if replay():
            clear_output()
            game_board = ['#',' ',' ',' ',' ',' ',' ',' ',' ',' ']
            coin = None
            game_on = True
            Player1 = True
            Player2 = False
        else:
            break
